
def ext = rootProject.ext
def versions = ext.versions

buildscript {

    apply from: 'config.gradle'

    repositories {
        maven {
            url 'https://nexus.local.c332030.com/repository/maven-public/'
        }
    }
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group = rootProject.ext.group
    version = rootProject.ext.version

    sourceCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11

    [compileJava, compileTestJava, javadoc]*.options*.encoding = rootProject.ext.charset

    java {
        withJavadocJar()
        withSourcesJar()
    }

    jar {
        enabled = true

        into("META-INF/maven/$project.group/$project.name") {
            from { generatePomFileForMavenPublication }
            rename ".*", "pom.xml"
        }
    }

    repositories {
        maven {
            url 'https://nexus.local.c332030.com/repository/maven-public/'
        }
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
            }
        }

        repositories {
            maven {
              def releasesRepoUrl = "https://nexus.local.c332030.com/repository/maven-releases/"
              def snapshotsRepoUrl = "https://nexus.local.c332030.com/repository/maven-snapshots/"
              url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

              credentials {
                username 'admin'
                password '123456'
              }
            }
        }
    }

    dependencies {

        compileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: versions.servlet
        testCompileOnly group: 'javax.servlet', name: 'javax.servlet-api', version: versions.servlet

        // logback
        compileOnly group: 'ch.qos.logback', name: 'logback-core', version: versions.logback
        testCompileOnly group: 'ch.qos.logback', name: 'logback-core', version: versions.logback

        compileOnly group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback
        testCompileOnly group: 'ch.qos.logback', name: 'logback-classic', version: versions.logback

        // commons-lang3
        compileOnly group: 'org.apache.commons', name: 'commons-lang3', version: versions.apache_commons_lang3
        testCompileOnly group: 'org.apache.commons', name: 'commons-lang3', version: versions.apache_commons_lang3

        // commons-collections4
        compileOnly group: 'org.apache.commons', name: 'commons-collections4', version: versions.apache_commons_collections
        testCompileOnly group: 'org.apache.commons', name: 'commons-collections4', version: versions.apache_commons_collections

        // guava
        compileOnly group: 'com.google.guava', name: 'guava', version: versions.google_guava
        testCompileOnly group: 'com.google.guava', name: 'guava', version: versions.google_guava

        testImplementation group: 'junit', name: 'junit', version: versions.junit

        // lombok
        compileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    }

    // 实时更新 snapshots
    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    // 测试配置
    test {
        // include '**/Test*.class'

        exclude '**/*Test*.class'
    }
}
